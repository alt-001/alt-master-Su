#filters
  #filterHandle
    .text 
      | filter
  .col-xs-1
    form
      - var filterGenderOptions = [{value: "x", text: "Man"}, {value: "y", text: "Woman"}]
      each val in filterGenderOptions
        label.filter-button.gender
          .child
            input(ng-model="productsFilterService.activeFilters.gender" type="radio" name="filter" value="#{val.value}" )
            | #{val.text}
  .col-xs-3
    form
      - var filterTypeOptions = [{value: "footwear", text: "Shoes"}, {value: "accessories", text: "Accessories"}, {value: "bag", text: "Bags"}, {value: "jewellery", text: "Jewellery"}, {value: "apparel", text: "Apparel"}, {value: "misc", text: "Other misc"}]
      each val in filterTypeOptions
        .col-xs-12.col-sm-12.col-md-6.col-lg-6
          label.filter-button.type
            .child
              input(ng-model="productsFilterService.activeFilters.maincat" type="radio" name="filter" value="#{val.value}")
              | #{val.text}
  .col-xs-2
    form
      - var filterColourOptions = [{value: "blue", text: "#01D4FF"}, {value: "red", text: "#F9C5E3"}, {value: "black", text: "#000"}, {value: "green", text: "#AEF5B0"}, {value: "red", text: "#FAB6B6"}, {value: "blue", text: "#DADADA"}, {value: "black", text: "#FAE4AD"}, {value: "green", text: "#ADCCFA"}, {value: "blue", text: "#D8CAB8"}]
      each val in filterColourOptions
        .col-xs-12.col-sm-12.col-md-4.col-lg-4
          label.colour(style="background-color: #{val.text}")
            input(ng-model="productsFilterService.activeFilters.color" type="radio" name="filter" value="#{val.value}")
            | #{val.text}
  .col-xs-3
    form(ng-show="productsFilterService.activeFilters.gender == 'x' && productsFilterService.activeFilters.maincat == 'footwear' || productsFilterService.activeFilters.maincat == undefined")
      - var filterSubOptions = [{value: "sneaker", text: "Sneaker"}, {value: "laced", text: "Laced"}, {value: "boat", text: "Boat"}]
        each val in filterSubOptions
          .col-xs-12.col-sm-12.col-md-4.col-lg-4
            label.filter-button.subcat
              .child
                input(ng-model="filtertype.#{val.value}" type="checkbox" value="#{val.value}")
                | #{val.text}
    form(ng-show="productsFilterService.activeFilters.gender == 'y' && productsFilterService.activeFilters.maincat == 'footwear'")
      - var filterSubOptions = [{value: "highheel", text: "high heel"}, {value: "lowheel", text: "low heel"}, {value: "flat", text: "flat"}]
        each val in filterSubOptions
          .col-xs-12.col-sm-12.col-md-4.col-lg-4
            label.filter-button.subcat
              .child
                input(ng-model="filtertype.#{val.value}" type="checkbox" value="#{val.value}")
                | #{val.text}
    form(ng-show="productsFilterService.activeFilters.gender == 'y' && productsFilterService.activeFilters.maincat == 'bag'")
      - var filterSubOptions = [{value: "shoulderbag", text: "shoulder bag"}, {value: "handbag", text: "handbag"}, {value: "clutch", text: "clutch"}, {value: "tote", text: "tote"}]
        each val in filterSubOptions
          .col-xs-12.col-sm-12.col-md-4.col-lg-4
            label.filter-button.subcat
              .child
                input(ng-model="filtertype.#{val.value}" type="checkbox" value="#{val.value}")
                | #{val.text}
  .col-xs-3
    form
      - var sortOptions = [{value: "-id", text: "Most recent"}, {value: "-likeCount", text: "Most liked"}, {value: "-price", text: "Price high"}, {value: "price", text: "Price low"}, {value: "video", text: "Video"}, {value: "featured", text: "We recommend"}]
      each val in sortOptions
        .col-xs-12.col-sm-12.col-md-6.col-lg-6
          label.filter-button.order
            .child
              input(ng-model="sort" type="radio" name="sort" value="#{val.value}")
              | #{val.text}

script.
  $('.filter-button.gender').click(function() {
    $('.filter-button.gender').removeClass('active');
    $(this).addClass('active');
  });
  $('.filter-button.type').click(function() {
    $('.filter-button.type').removeClass('active');
    $(this).addClass('active');
  });
  $('.filter-button.subcat').click(function() {
    var isActive = $('input', this).is(':checked');
    console.log(isActive);
    if(isActive) {
      $(this).addClass('active');
    } else {
      $(this).removeClass('active');
    }
  });
  $('.colour').click(function() {
    $('.colour').removeClass('active');
    $(this).addClass('active');
  });
  $('.filter-button.order').click(function() {
    $('.filter-button.order').removeClass('active');
    $(this).addClass('active');
  });
  $("#filterHandle").hoverIntent(
    function(){
      $("#filters").animate({bottom:'+=5px'},200);
    },
    function() {
      $("#filters").animate({bottom:'-=5px'},200);
    }
  );
  $("#filterHandle").click(function(event){
    if ($('#filters').hasClass("isDown") ) {
      $('#filters').stop().animate({bottom:'-=173px'}, 300, 'easeOutExpo');
      $('#filters').removeClass("isDown");
    } else {
      $('#filters').stop().animate({bottom:'+=173px'}, 300, 'easeOutExpo');
      $('#filters').addClass("isDown");
    }
    return false;
  });