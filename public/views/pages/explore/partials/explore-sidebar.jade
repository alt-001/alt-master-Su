#filters
  #handle.col-xs-12
    h4 feel lovely?
    h1 pull
    .jump
      a(href="#luckyProducts")
        .pull-tab
  .col-xs-12
    form
      - var filterGenderOptions = [{value: "x", text: "Man"}, {value: "y", text: "Woman"}]
      each val in filterGenderOptions
        .col-xs-6
          label.filter-button.gender
            .child
              input(ng-model="productsFilterService.activeFilters.gender" type="radio" name="filter" value="#{val.value}" )
              | #{val.text}
  .col-xs-12
    form
      - var filterTypeOptions = [{value: "footwear", text: "Shoes"}, {value: "accessories", text: "Accessories"}, {value: "bag", text: "Bags"}, {value: "jewellery", text: "Jewellery"}, {value: "apparel", text: "Apparel"}, {value: "misc", text: "lifestyle"}]
      each val in filterTypeOptions
        .col-xs-6
          label.filter-button.type
            .child
              input(ng-model="productsFilterService.activeFilters.maincat" type="radio" name="filter" value="#{val.value}")
              | #{val.text}
  .col-xs-12
    form
      - var filterColourOptions = [{value: "black", text: "#000"}, {value: "white", text: "#fff"}, {value: "grey", text: "#B6B7B8"}, {value: "red", text: "#F77071"}, {value: "blue", text: "#87A8FA"}, {value: "yellow", text: "#FBFA76"}, {value: "green", text: "#76D08C"}, {value: "brown", text: "#A28D76"}, {value: "orange", text: "#F8B573"},{value: "purple", text: "#A575B7"},{value: "Pink", text: "#F4B9F5"},{value: "neutral", text: "#F3ECCE"},{value: "Neon", text: "url('../assets/images/Neon.jpg') no-repeat center center;"},{value: "Metallic", text: "url('../assets/images/Metallic.jpg') no-repeat center center;"},{value: "Print", text: "url('../assets/images/print.jpg') no-repeat center center;"},{value: "Reflective", text: "url('../assets/images/Reflective.jpg') no-repeat center center;"}]
      each val in filterColourOptions
        .col-xs-3
          label.colour(style="background: #{val.text}")
            input(ng-model="productsFilterService.activeFilters.color" type="radio" name="filter" value="#{val.value}")
            | #{val.text}
  .col-xs-12
    form
      - var sortOptions = [{value: "-id", text: "Most recent"}, {value: "-likeCount", text: "Most liked"}, {value: "-price", text: "Price high"}, {value: "price", text: "Price low"}]
      each val in sortOptions
        .col-xs-6
          label.filter-button.order
            .child
              input(ng-model="sort" type="radio" name="sort" value="#{val.value}")
              | #{val.text}
#subCat
  .col-xs-12
    form(ng-show="productsFilterService.activeFilters.gender == 'x' && productsFilterService.activeFilters.maincat == 'footwear' || productsFilterService.activeFilters.maincat == undefined")
      - var filterSubOptions = [{value: "sneaker", text: "Sneaker"}, {value: "laced", text: "Laced"}, {value: "boat", text: "Boat"}]
        each val in filterSubOptions
          .col-xs-12
            label.filter-button.subcat
              .child
                input(ng-model="filtertype.#{val.value}" type="checkbox" value="#{val.value}")
                | #{val.text}
    form(ng-show="productsFilterService.activeFilters.gender == 'y' && productsFilterService.activeFilters.maincat == 'footwear'")
      - var filterSubOptions = [{value: "highheel", text: "high heel"}, {value: "lowheel", text: "low heel"}, {value: "flat", text: "flat"}]
        each val in filterSubOptions
          .col-xs-12
            label.filter-button.subcat
              .child
                input(ng-model="filtertype.#{val.value}" type="checkbox" value="#{val.value}")
                | #{val.text}
    form(ng-show="productsFilterService.activeFilters.gender == 'y' && productsFilterService.activeFilters.maincat == 'bag'")
      - var filterSubOptions = [{value: "shoulderbag", text: "shoulder bag"}, {value: "handbag", text: "handbag"}, {value: "clutch", text: "clutch"}, {value: "tote", text: "tote"}]
        each val in filterSubOptions
          .col-xs-12
            label.filter-button.subcat
              .child
                input(ng-model="filtertype.#{val.value}" type="checkbox" value="#{val.value}")
                | #{val.text}
script.
  $('.filter-button.gender').click(function() {
    $('.filter-button.gender').removeClass('active');
    $(this).addClass('active');
  });
  $('.filter-button.type').click(function() {
    $('.filter-button.type').removeClass('active');
    $(this).addClass('active');
  });
  $('.filter-button.type').click(function() {
    $('#subCat').removeClass('active');
    $(this).addClass('active');
  });
  $('#subCat .filter-button.subcat').click(function() {
    $('#subCat').addClass('active');
    $(this).removeClass('active');
  });
  $('#subCat .filter-button.subcat').click(function() {
    $('#luckyProducts').fadeOut();
  });
  $('.pull-tab').click(function() {
    $('#luckyProducts').fadeIn();
  });
  jQuery(function( $ ){
    $('.jump a[href^="#"]').bind('touchstart click', function(event) {
        var target = $( $(this).attr('href') );
        if( target.length ) {
            event.preventDefault();
            $('html, body').animate({
                scrollTop: target.offset().top
            }, 1000);
        }
    });
  });
  $('.filter-button.subcat').click(function() {
    var isActive = $('input', this).is(':checked');
    console.log(isActive);
    if(isActive) {
      $(this).addClass('active');
    } else {
      $(this).removeClass('active');
    }
  });
  $('.colour').click(function() {
    $('.colour').removeClass('active');
    $(this).addClass('active');
  });
  $('.filter-button.order').click(function() {
    $('.filter-button.order').removeClass('active');
    $(this).addClass('active');
  });